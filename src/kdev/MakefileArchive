# build rsserial executable when user executes "make" 

ifdef ARCH
  ifeq ($(ARCH),mipsel)
    $(info ARCH is $(ARCH), use little endian)
    ENDIAN=__LITTLE_ENDIAN__
  else ifeq ($(ARCH),mips)
    $(info ARCH is $(ARCH), use big endian)
    ENDIAN=__BIG_ENDIAN__
  else 
    $(error unknown architecture $(ARCH))
  endif
else
  $(error Architecture "ARCH" is missing)
endif

SRC:=${CURDIR}/
#CFLAGS+= -x c++
LIBNAME:=libkdev
SONAME:=$(LIBNAME).so.0
EXEC:=$(LIBNAME).so.0.0.0
LINKERNAME:=$(LIBNAME).so
OBJ= kdev.o
	 	
#CPPFLAGS+=$(INCLUDE_DIR) -std=c++0x -D_TIMT_ -D $(processor_family) -D$(ENDIAN) -g -Wall -fPIC -pedantic #-fpermissive 
CPPFLAGS:=-fPIC -pedantic 
LDFLAGS+= -shared 
unexport LDFLAGS

VPATH=$(SRC)

$(EXEC): $(OBJ)
	$(CXX) $(OBJ) $(LDFLAGS) -Wl,-soname,$(SONAME) -o $(EXEC)
	ln -s $(EXEC) $(LINKERNAME)
	ln -s $(EXEC) $(SONAME)
	cp -d *.so* ${LIBDIR}
	cp -d *.h* ${LIBINCLUDE}
	touch ./.built
	
${CURDIR}/%.o: %.c

${CURDIR}/%.o: %.cpp
.PHONY : clean
clean:
	rm *.o *.so*
