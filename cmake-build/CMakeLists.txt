cmake_minimum_required(VERSION 2.8.10)

set(CMAKE_DISABLE_IN_SOURCE_BUILD ON)
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_COLOR_MAKEFILE   ON)
set(CMAKE_SKIP_BUILD_RPATH true )
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/install/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/install/bin)

project(kappaio-top C CXX)

add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../src output/kappaio)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../src/sbl output/sbl)
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../src/kappaio-watch output/kappaio-watch)
add_dependencies(kappaio sbl kappaio-watch)

SET(CPACK_GENERATOR "DEB")
SET(CPACK_PACKAGE_NAME "kappaio")
SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "kappaio-dev") #required
SET(CPACK_INSTALL_CMAKE_PROJECTS "${CMAKE_CURRENT_SOURCE_DIR};kappaio;ALL;/")
SET(CPACK_PACKAGING_INSTALL_PREFIX /)
SET(CPACK_DEBIAN_PACKAGE_PRIORITY "optional")
SET(CPACK_PACKAGE_CONTACT "dev@kapparock.com")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libjansson4 (>=2.4),libmtp-runtime (>=1.1.0), openssl (>=1.0.1)")
set(CPACK_PACKAGE_VERSION "1.2.0")
set(CPACK_PACKAGE_VERSION_MAJOR "1")
set(CPACK_PACKAGE_VERSION_MINOR "2")
set(CPACK_PACKAGE_VERSION_PATCH "0")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "kappaio is a Linux daemon that performs the core tasks of the web-based ZigBee gateway. Install this package before installing any other kappaIO API.")
SET(CPACK_PACKAGE_DESCRIPTION "Linux ZigBee Gateway Daemon")
SET(CPACK_DEBIAN_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
SET(KAPPAIO_BIN_PERMISSIONS "OWNER_EXECUTE;OWNER_WRITE;OWNER_READ;GROUP_READ;GROUP_EXECUTE;WORLD_READ;WORLD_EXECUTE")
SET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA postinst)
#get_property(mydir TARGET kappaio PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
#message("** CMAKE_INCLUDE_PATH : ${mydir}")

include(CPack)
INSTALL(FILES ../files/${CPACK_PACKAGE_NAME}.init RENAME ${CPACK_PACKAGE_NAME} PERMISSIONS ${KAPPAIO_BIN_PERMISSIONS} DESTINATION etc/init.d)
INSTALL(FILES ../files/${CPACK_PACKAGE_NAME}-watch.init RENAME ${CPACK_PACKAGE_NAME}-watch PERMISSIONS ${KAPPAIO_BIN_PERMISSIONS} DESTINATION etc/init.d)
INSTALL(FILES ../files/flashTI.sh PERMISSIONS ${KAPPAIO_BIN_PERMISSIONS} DESTINATION /usr/bin)
INSTALL(FILES ../files/temp_files/widget_registry.json DESTINATION /tmp)
INSTALL(DIRECTORY ../files/ DESTINATION usr/lib/${CPACK_PACKAGE_NAME}/files FILES_MATCHING PATTERN "*.json" PATTERN "*.pem")
INSTALL(FILES ../files/widget_registry_mgr PERMISSIONS ${KAPPAIO_BIN_PERMISSIONS} DESTINATION usr/lib/${CPACK_PACKAGE_NAME}/files)
INSTALL(DIRECTORY install/bin/ FILE_PERMISSIONS ${KAPPAIO_BIN_PERMISSIONS} DESTINATION usr/bin)
INSTALL(DIRECTORY install/lib/ FILE_PERMISSIONS ${KAPPAIO_BIN_PERMISSIONS} DESTINATION usr/lib/kappaio)
INSTALL(FILES ../files/10-kappaio.rules DESTINATION etc/udev/rules.d)

get_property(myHdrs TARGET kappaio PROPERTY INTERFACE_INCLUDE_DIRECTORIES)
foreach(myHdr ${myHdrs})
INSTALL(DIRECTORY ${myHdr}/ DESTINATION usr/include/${CPACK_PACKAGE_NAME} FILES_MATCHING PATTERN "*.h" PATTERN "*.hpp" PATTERN "src" EXCLUDE)
endforeach(myHdr)

